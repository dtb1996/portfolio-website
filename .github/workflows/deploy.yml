name: CI/CD Pipeline

on:
  push:
    branches: [main, dev, feature/**]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run ESLint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run tests
        run: npm test -- --ci --watchAll=false

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: dist

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: site-build
          path: dist

      - name: Clean remote public_html
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          port: ${{ secrets.HOSTINGER_PORT }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_KEY }}
          script: |
            rm -rf ${{ secrets.HOSTINGER_TARGET_PATH }}/*

      - name: Upload files to Hostinger
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          port: ${{ secrets.HOSTINGER_PORT }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_KEY }}
          source: "dist/**"
          target: ${{ secrets.HOSTINGER_TARGET_PATH }}
          strip_components: 1

  deploy-preview:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Deploy to GitHub Pages (Preview)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          destination_dir: pr-${{ github.event.pull_request.number }}
          
      - name: Comment Preview Link on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            Preview available:  
            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ github.event.pull_request.number }}/

  cleanup-preview:
    if: github.event.pull_request.merged == true || github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Remove PR Preview from GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./empty
          destination_dir: pr-${{ github.event.pull_request.number }}

      - name: Comment Cleanup on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            Preview for PR #${{ github.event.pull_request.number }} has been removed.
